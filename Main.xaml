<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="820,2275.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:besm="clr-namespace:BalaReva.EasyPowerPoint.Scope.Main;assembly=BalaReva.Easy.PowerPoint" xmlns:bess="clr-namespace:BalaReva.EasyPowerPoint.Scope.Slides;assembly=BalaReva.Easy.PowerPoint" xmlns:bp="clr-namespace:BalaReva.PowerPoint;assembly=BalaReva.Easy.PowerPoint" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>BalaReva.EasyPowerPoint.Scope.Main</x:String>
      <x:String>BalaReva.EasyPowerPoint.Base</x:String>
      <x:String>BalaReva.PowerPoint</x:String>
      <x:String>BalaReva.EasyPowerPoint.Scope.Slides</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.Enums</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.ValidationStationAdapters</x:String>
      <x:String>UiPath.Abbyy.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>BalaReva.Easy.PowerPoint</AssemblyReference>
      <AssemblyReference>BalaReva.Easy.PowerPoint.Utilities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Core</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="681.6,2210.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="8077773c-d0f3-4d91-98a5-017f43d8c64f" Name="appID" />
      <Variable x:TypeArguments="x:String" Default="6JZY4vszFDfQag7IusN9Ntxq" Name="appPW" />
      <Variable x:TypeArguments="x:String" Default="https://cloud.ocrsdk.com" Name="appURL" />
      <Variable x:TypeArguments="x:String" Name="niveau" />
      <Variable x:TypeArguments="x:String" Name="typeMesure" />
      <Variable x:TypeArguments="sd:Process" Name="process" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\ibnad\Dropbox\Mon PC (LAPTOP-TO3EQ803)\Downloads\Exercice Test\Sources" Name="repertoire" />
      <Variable x:TypeArguments="x:Int32" Name="numSlide" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <besm:PowerPointScope ModifyPassword="{x:Null}" OpenPassword="{x:Null}" DisplayName="PowerPoint Application Scope" FilePath="C:\Users\ibnad\Dropbox\Mon PC (LAPTOP-TO3EQ803)\Downloads\Exercice Test\Mesures Template.pptx" sap:VirtualizedContainerService.HintSize="640,726.4" sap2010:WorkflowViewState.IdRef="PowerPointScope_1">
      <besm:PowerPointScope.Body>
        <ActivityAction x:TypeArguments="besm:PowerPointObject">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="besm:PowerPointObject" Name="PptObj" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="363.2,585.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="bp:SlideObject" Name="slideObj" />
              <Variable x:TypeArguments="x:Int32" Name="indexRow" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <bess:SlideExtractor Delay="3" DisplayName="Slide Extractor" sap:VirtualizedContainerService.HintSize="321.6,61.6" sap2010:WorkflowViewState.IdRef="SlideExtractor_1" SlideIndex="1" SlideResult="[slideObj]" />
            <ui:ForEach x:TypeArguments="bp:TextShape" CurrentIndex="[indexRow]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="321.6,391.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[slideObj.TextShapes]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="bp:TextShape">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="bp:TextShape" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Corps" sap:VirtualizedContainerService.HintSize="275.2,256.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="233.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;index : &quot;+indexRow.ToString+&quot; Contenu : &quot;+item.Text]" />
                    <bess:TextShapeEdit ExecutionResult="{x:Null}" Delay="3" DisplayName="Text ShapeEdit" sap:VirtualizedContainerService.HintSize="233.6,61.6" sap2010:WorkflowViewState.IdRef="TextShapeEdit_1" SlideIndex="1" TextIndex="1" TextStyle="[New TextShape(&quot;Mesures du  &quot;+Now.toString(&quot;dd-MM-yyyy&quot;))]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </besm:PowerPointScope.Body>
    </besm:PowerPointScope>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[numSlide]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="640,1351.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(repertoire)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="416.8,1216.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Corps" sap:VirtualizedContainerService.HintSize="375.2,976.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="generation" />
                <Variable x:TypeArguments="x:String" Name="niveau_r" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:Process">[process]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:Process">[process.Start(item)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[generation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[item.Substring(83,2)]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Génération &quot;+generation]" />
              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[niveau_r]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[item.Substring(80,2)]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;niveau &quot;+niveau_r]" />
              <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR Text 'texte  R3_3G_EcNo.jpg'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_37">
                <ui:GetOCRText.OCREngine>
                  <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <ui:AbbyyCloudOCR FilterRegion="{x:Null}" Output="{x:Null}" ApplicationID="[appID]" ComputeSkewAngle="False" DisplayName="Abbyy Cloud OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AbbyyCloudOCR_37" Image="[Image]" Language="French" Password="[appPW]" Profile="None" Scale="1" ServerUrl="[appURL]" Text="[niveau]" />
                  </ActivityFunc>
                </ui:GetOCRText.OCREngine>
                <ui:GetOCRText.Target>
                  <ui:Target Element="{x:Null}" Id="cd196e37-494c-4275-adc7-627679f0bb01" InformativeScreenshot="6dc9f44a0e49f3df21e454cf0d260d3d" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' /&gt;&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.jpg' /&gt;">
                    <ui:Target.ClippingRegion>
                      <ui:Region Rectangle="305, 119, 52, 27" />
                    </ui:Target.ClippingRegion>
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:GetOCRText.Target>
              </ui:GetOCRText>
              <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR Text 'texte  R3_3G_EcNo.jpg'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_38">
                <ui:GetOCRText.OCREngine>
                  <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <ui:AbbyyCloudOCR FilterRegion="{x:Null}" Output="{x:Null}" ApplicationID="[appID]" ComputeSkewAngle="False" DisplayName="Abbyy Cloud OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AbbyyCloudOCR_38" Image="[Image]" Language="French" Password="[appPW]" Profile="None" Scale="1" ServerUrl="[appURL]" Text="[typeMesure]" />
                  </ActivityFunc>
                </ui:GetOCRText.OCREngine>
                <ui:GetOCRText.Target>
                  <ui:Target Element="{x:Null}" Id="cd196e37-494c-4275-adc7-627679f0bb01" InformativeScreenshot="e2aa94411e4a2c1d855889c43af402f0" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' /&gt;&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.jpg' /&gt;">
                    <ui:Target.ClippingRegion>
                      <ui:Region Rectangle="798, 145, 24, 14" />
                    </ui:Target.ClippingRegion>
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:GetOCRText.Target>
              </ui:GetOCRText>
            </Sequence>
            <ui:CloseApplication DisplayName="Close Application 'texte  R3_3G_EcNo.jpg'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="338a4098-082f-4480-80b9-93acaa66d82c" InformativeScreenshot="9862751bad85e47352c6f101628b9b1f" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' /&gt;&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.jpg' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>